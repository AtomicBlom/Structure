// define the properties file
ext.configFile = file "build.properties"
configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'java'

version = (hasProperty("CIRevision") ? CIRevision : config.api_version)
group = config.group_name
archivesBaseName = "${config.api_id}-${config.minecraft_version}"
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = config.minecraft_version + "-" + config.forge_version // grab latest forge
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = config.mcp_mappings
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

jar {
    classifier = 'universal'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    appendix = 'deobf'
}

apply plugin: 'idea'
apply plugin: 'maven'

//based of atomicblom's createPom for McGUI
task createPom << {
    pom {
        project {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version

            inceptionYear '2016'
            licenses {
                license {
                    name 'LGPL3'
                    url 'http://www.gnu.org/licenses/lgpl-3.0.html'
                    distribution 'repo'
                }
            }
        }
    }.writeTo(libsDir.path + "/" + project.archivesBaseName + "-" + project.version + ".pom")
}

build.dependsOn createPom
